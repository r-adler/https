import edu.princeton.cs.algs4.*;
import java.net.*;
import java.io.*;
import javax.net.ssl.HttpsURLConnection;

public class AutoHTTPS {
    
    private static int b;
    
    //https://www.mkyong.com/java/java-httpurlconnection-follow-redirect-example/
    public static boolean redirect(String host) {
        
        try {
            
            String url = host;
            
            URL obj = new URL(url);
            HttpURLConnection conn = (HttpURLConnection) obj.openConnection();
            conn.setConnectTimeout(1000);
            conn.addRequestProperty("Accept-Language", "en-US,en;q=0.8");
            conn.addRequestProperty("User-Agent", "Mozilla");
            conn.addRequestProperty("Referer", "google.com");
            
            
            boolean redirect = false;
            
            // normally, 3xx is redirect
            int status = conn.getResponseCode();
            if (status != HttpURLConnection.HTTP_OK) {
                if (status == HttpURLConnection.HTTP_MOVED_TEMP
                        || status == HttpURLConnection.HTTP_MOVED_PERM
                        || status == HttpURLConnection.HTTP_SEE_OTHER)
                    redirect = true;
            }
            
            if (redirect) {
                
                // get redirect url from "location" header field
                String newUrl = conn.getHeaderField("Location");
                
                // get the cookie if need, for login
                String cookies = conn.getHeaderField("Set-Cookie");
                
                // open the new connnection again
                conn = (HttpURLConnection) new URL(newUrl).openConnection();
                conn.setRequestProperty("Cookie", cookies);
                conn.addRequestProperty("Accept-Language", "en-US,en;q=0.8");
                conn.addRequestProperty("User-Agent", "Mozilla");
                conn.addRequestProperty("Referer", "google.com");
                
                return true;
            }
            
            else {
                return false;
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        return false;
    }
    
    public static boolean ping(String host) {
        
        if (host == null) {
            //StdOut.println(host);
            return false;
        }
        
        try {
            HttpURLConnection con = (HttpURLConnection) new URL(host).openConnection();
            con.setConnectTimeout(1000);
            con.setRequestMethod("HEAD");
            int responseCode = con.getResponseCode();
            return (199 < responseCode && responseCode < 300);
        }
        
        catch (IOException exception) { return false; }
    }
    
    public static void main(String[] args) {
        
        // time it, for the sake of curiousity
        Stopwatch time = new Stopwatch();
        
        // read in file
        //String filename = args[0];
        In in = new In(args[0]);
        //StdOut.println(args[0]);
        
        // how many of the websites to test.
        int N = Integer.parseInt(args[1]);
        if (N < 1 || N > 1000000) {
            throw new IndexOutOfBoundsException("N must be between 1 "
                                                    + "and 1 million");
        }
        
        StdOut.println("# of sites to test: " + N);
        

            
        // IT WORKS!!!
        String site = new String();
        for (int i = 0; i < N; i++) {
            site = in.readString().replaceFirst("^", "http://");
            if (!redirect(site)) { // redirects automatically to https
                if (!ping(site.replaceFirst("^http://", "https://"))) { // will it accept https at all
                    StdOut.println(i + 1 + ": " + site);
                    b++;
                }
            }
        }
        
        StdOut.println(b);
        
        StdOut.println(time.elapsedTime() + " seconds");
    }
    
}
